Index: tests/Test_Function_Login_Mail.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Fixture to initialize the WebDriver instance\r\n\r\nimport pytest\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.by import By\r\nfrom selenium.webdriver.support.ui import WebDriverWait\r\nfrom selenium.webdriver.support import expected_conditions as EC\r\nfrom tests.Test_Otp import fetch_otp_from_email\r\nimport time  # Add this line to import the time module\r\n\r\nfrom utilities.BaseClass import BaseClass\r\n# Test case to log in with email and OTP\r\n\r\n\r\n@pytest.mark.usefixtures(\"setup\")\r\nclass TestLogin:\r\n    def test_login_with_email_and_otp(self):\r\n\r\n        print(\"Test started: Logging in with email and OTP\")\r\n\r\n        # Wait for the loader overlay to disappear\r\n        print(\"Waiting for the loader overlay to disappear...\")\r\n        WebDriverWait(self.driver, 10).until(\r\n            EC.invisibility_of_element_located((By.CLASS_NAME, 'loader-overlay'))\r\n        )\r\n\r\n        # Find and click on the login icon\r\n        print(\"Clicking on the login icon...\")\r\n        login_icon = WebDriverWait(self.driver, 10).until(\r\n            EC.element_to_be_clickable((By.CSS_SELECTOR, \"#page > div.navbar__wrapper > nav.navbar.navbar__main > div > ul > li:nth-child(4)\")))\r\n        login_icon.click()\r\n\r\n        # Wait for the login modal to appear\r\n        print(\"Waiting for the login modal to appear...\")\r\n        login_modal = WebDriverWait(self.driver, 10).until(\r\n            EC.visibility_of_element_located((By.XPATH, '//*[@id=\"Signin_modal\"]/div/div')))\r\n\r\n        # Find and click on the mail button\r\n        print(\"Clicking on the mail button...\")\r\n        mail_button = WebDriverWait(login_modal, 10).until(\r\n            EC.element_to_be_clickable((By.XPATH, '//*[@id=\"Signin_modal\"]/div/div/div[3]/div[2]/button[2]')))\r\n        mail_button.click()\r\n\r\n        # Wait for the email modal to appear\r\n        print(\"Waiting for the email modal to appear...\")\r\n        email_modal = WebDriverWait(self.driver, 10).until(\r\n            EC.visibility_of_element_located((By.XPATH, '//*[@id=\"Signin-email_modal\"]/div/div')))\r\n\r\n        # Find the email field and enter the email address\r\n        print(\"Entering the email address...\")\r\n        email_field = WebDriverWait(email_modal, 10).until(\r\n            EC.visibility_of_element_located((By.XPATH, '//*[@id=\"email_auth_second\"]')))\r\n        email_field.send_keys(\"yousef_sami2010@yahoo.com\")\r\n\r\n        # Switch to the iframe\r\n        print(\"Switching to the iframe...\")\r\n        iframe = WebDriverWait(self.driver, 10).until(\r\n            EC.visibility_of_element_located((By.XPATH, '//*[@id=\"signinemail-form-new\"]/div[2]/div/div/div/iframe')))\r\n        self.driver.switch_to.frame(iframe)\r\n\r\n        # Wait for the reCAPTCHA checkbox\r\n        print(\"Waiting for the reCAPTCHA checkbox...\")\r\n        recaptcha_checkbox = WebDriverWait(self.driver, 10).until(\r\n            EC.element_to_be_clickable((By.XPATH, '//*[@id=\"recaptcha-anchor\"]/div[1]')))\r\n\r\n        # Introduce a delay of 2 seconds (adjust the duration as needed)\r\n        print(\"Introducing delay before clicking reCAPTCHA...\")\r\n        time.sleep(8)\r\n\r\n        # Click on the reCAPTCHA checkbox\r\n        recaptcha_checkbox.click()\r\n\r\n        # Switch back to the default content (outside the iframe)\r\n        print(\"Switching back to default content...\")\r\n        self.driver.switch_to.default_content()\r\n\r\n        # Find and click on the login button\r\n        print(\"Clicking on the login button...\")\r\n        login_button = WebDriverWait(email_modal, 10).until(\r\n            EC.element_to_be_clickable((By.XPATH, '//*[@id=\"Signin-email_modal\"]/div/div/div[3]/button')))\r\n        time.sleep(8)\r\n\r\n        login_button.click()\r\n\r\n        # Perform actions to trigger OTP (e.g., submit login form)\r\n        # ...\r\n        time.sleep(10)\r\n\r\n        # Retrieve OTP from email\r\n        print(\"Fetching OTP from email...\")\r\n        otp = fetch_otp_from_email()\r\n\r\n        # Wait for the OTP field to become visible\r\n        print(\"Waiting for the OTP field...\")\r\n        otp_field = WebDriverWait(self.driver, 30).until(EC.visibility_of_element_located((By.XPATH, '//*[@id=\"otpEmail\"]')))\r\n        otp_field.send_keys(otp)\r\n\r\n        # Submit the OTP form\r\n        print(\"Submitting OTP...\")\r\n        otp_submit_button = WebDriverWait(self.driver, 10).until(\r\n            EC.element_to_be_clickable((By.XPATH, '//*[@id=\"submitEmailOtp\"]')))\r\n        otp_submit_button.click()\r\n\r\n        # Wait for the unique element on the home page\r\n        print(\"Waiting for the unique element on the home page...\")\r\n        unique_element = WebDriverWait(self.driver, 30).until(\r\n            EC.visibility_of_element_located((By.CSS_SELECTOR, '#splide05 > div.splide__arrows.splide__arrows--ltr > button.splide__arrow.splide__arrow--prev')))\r\n\r\n        # Assert that the unique element is present, indicating the user is on the home page\r\n        assert unique_element is not None, \"User is not on the home page after successful login\"\r\n\r\n        # Optionally, you can print a message indicating the successful verification\r\n        print(\"Verified that the user is on the home page after successful login\")\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Test_Function_Login_Mail.py b/tests/Test_Function_Login_Mail.py
--- a/tests/Test_Function_Login_Mail.py	
+++ b/tests/Test_Function_Login_Mail.py	
@@ -27,7 +27,7 @@
         # Find and click on the login icon
         print("Clicking on the login icon...")
         login_icon = WebDriverWait(self.driver, 10).until(
-            EC.element_to_be_clickable((By.CSS_SELECTOR, "#page > div.navbar__wrapper > nav.navbar.navbar__main > div > ul > li:nth-child(4)")))
+            EC.element_to_be_clickable((By.XPATH, '//*[@id="page"]/div[2]/nav[1]/div/ul/li[3]/a')))
         login_icon.click()
 
         # Wait for the login modal to appear
